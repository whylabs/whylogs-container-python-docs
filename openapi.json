{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/log":{"post":{"tags":["profile"],"summary":"Profile tabular data","description":"Profile tabular data. The Swagger UI isn't able to call this currently.\n\n## Sample curl request:\n\n```bash\ncurl -X 'POST'     -H \"X-API-Key: <password>\"     -H \"Content-Type: application/json\"     'http://localhost:8000/log'     --data-raw '{\n    \"datasetId\": \"model-62\",\n    \"multiple\": {\n        \"columns\": [ \"age\", \"workclass\", \"fnlwgt\", \"education\" ],\n        \"data\": [\n            [ 25, \"Private\", 226802, \"11th\" ]\n        ]\n    }\n}'\n```\n\n## Sample Python request:\n```python\nimport requests\n\n# Define your API key\napi_key = \"<password>\"\n\n# API endpoint\nurl = 'http://localhost:8000/log'\n\n# Sample data\ndata = {\n    \"datasetId\": \"model-62\",\n    \"multiple\": {\n        \"columns\": [\"age\", \"workclass\", \"fnlwgt\", \"education\"],\n        \"data\": [\n            [25, \"Private\", 226802, \"11th\"]\n        ]\n    }\n}\n\n# Make the POST request\nheaders = {\"X-API-Key\": api_key}\nresponse = requests.post(url, json=data, headers=headers)\n```","operationId":"log","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/log-embeddings":{"post":{"tags":["profile"],"summary":"Profile embeddings","description":"This endpoint requires a custom configuration to set up before hand. See https://docs.whylabs.ai/docs/integrations-whylogs-container/\nfor setting up embeddings support.\n\nLog embeddings data. The Swagger UI isn't able to call this currently.\n\n## Sample curl request:\n\n```bash\ncurl -X 'POST'     -H \"X-API-Key: <password>\"     -H \"Content-Type: application/octet-stream\"     'http://localhost:8000/log-embeddings'     --data-raw '{\n    \"datasetId\": \"model-62\",\n    \"timestamp\": 1634235000,\n    \"embeddings\": {\n        \"embeddings\": [[0.12, 0.45, 0.33, 0.92]]\n    }\n}'\n```\n\n## Sample Python request:\n```python\nimport requests\n\n# Define your API key\napi_key = \"<password>\"\n\n# API endpoint\nurl = 'http://localhost:8000/log-embeddings'\n\n# Sample data\ndata = {\n    \"datasetId\": \"model-62\",\n    \"timestamp\": 1634235000,  # an example timestamp\n    \"embeddings\": {\n        \"embeddings\": [[0.12, 0.45, 0.33, 0.92]]\n    }\n}\n\n# Make the POST request\nheaders = {\"X-API-Key\": api_key, \"Content-Type\": \"application/octet-stream\"}\nresponse = requests.post(url, json=data, headers=headers)\n```","operationId":"log_embeddings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogEmbeddingRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/log-pubsub":{"post":{"tags":["profile"],"summary":"Log Pubsub","operationId":"log_pubsub","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/log-pubsub-embeddings":{"post":{"tags":["profile"],"summary":"Log Pubsub Embeddings","operationId":"log_pubsub_embedding","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/log/llm":{"post":{"tags":["llm"],"summary":"Log a single prompt/response pair.","description":"This is a convenience wrapper around the llm request type for calling /log, which accepts bulk data.","operationId":"log_llm","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMValidateRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/validate/llm":{"post":{"tags":["llm"],"summary":"Validate a single prompt/response pair","description":"This endpoint can be used to synchronously get validation results from a single input\nprompt/response. It automatically performs whylogs profiling and sends profiles to\nwhylabs in the background, just like  the /log endpoint.\n\nArgs:\n    log (bool, optional): Determines if logging to WhyLabs is enabled for the validate request. Defaults to True.\n\n\n## Sample curl request:\n\n```bash\ncurl -X 'POST'     -H \"X-API-Key: <password>\"     -H \"Content-Type: application/octet-stream\"     'http://localhost:8000/validate/llm'     --data-raw '{\n    \"datasetId\": \"model-62\",\n    \"prompt\": \"This is a test prompt\",\n    \"response\": \"This is a test response\"\n}'\n```\n\n## Sample Python request:\n```python\nimport requests\n\n# Define your API key\napi_key = \"<password>\"\n\n# API endpoint\nurl = 'http://localhost:8000/validate/llm'\n\n# Sample data\ndata = {\n    \"datasetId\": \"model-62\",\n    \"prompt\": \"This is a test prompt\",\n    \"response\": \"This is a test response\"\n}\n\n# Make the POST request\nheaders = {\"X-API-Key\": api_key, \"Content-Type\": \"application/octet-stream\"}\nresponse = requests.post(url, json=data, headers=headers)\n```","operationId":"validate_llm","parameters":[{"name":"log","in":"query","required":false,"schema":{"type":"boolean","default":true,"title":"Log"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMValidateRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationReport"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationReport"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/publish":{"post":{"tags":["manage"],"summary":"Publish Profiles","operationId":"publish","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/health":{"get":{"tags":["manage"],"summary":"Health","operationId":"health","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/status":{"get":{"tags":["manage"],"summary":"Status","operationId":"status","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcessLoggerStatusResponse"}}}}}}},"/logDebugInfo":{"post":{"tags":["manage"],"summary":"Log Debug Info","description":"Log the output of /status","operationId":"debug_info","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LLMValidateRequest":{"properties":{"prompt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Prompt"},"response":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Response"},"datasetId":{"type":"string","title":"Datasetid"},"timestamp":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Timestamp"}},"type":"object","title":"LLMValidateRequest"},"LogEmbeddingRequest":{"properties":{"dataset_id":{"type":"string","title":"Dataset Id"},"timestamp":{"type":"integer","title":"Timestamp"},"embeddings":{"additionalProperties":{"anyOf":[{"items":{"items":{"type":"number"},"type":"array"},"type":"array"},{"items":{"items":{"type":"integer"},"type":"array"},"type":"array"},{"items":{"items":{"type":"string"},"type":"array"},"type":"array"}]},"type":"object","title":"Embeddings"}},"type":"object","required":["timestamp","embeddings"],"title":"LogEmbeddingRequest"},"LogMultiple":{"properties":{"columns":{"items":{"type":"string"},"type":"array","title":"Columns"},"data":{"items":{"items":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"},{"type":"boolean"},{"items":{"type":"number"},"type":"array"},{"items":{"type":"integer"},"type":"array"},{"items":{"type":"string"},"type":"array"},{"type":"null"}]},"type":"array"},"type":"array","title":"Data"}},"type":"object","required":["columns","data"],"title":"LogMultiple"},"LogRequest":{"properties":{"datasetId":{"type":"string","title":"Datasetid"},"multiple":{"$ref":"#/components/schemas/LogMultiple"},"timestamp":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Timestamp"}},"type":"object","required":["multiple"],"title":"LogRequest"},"LoggerStatusResponse":{"properties":{"dataset_timestamps":{"type":"integer","title":"Dataset Timestamps"},"dataset_profiles":{"type":"integer","title":"Dataset Profiles"},"segment_caches":{"type":"integer","title":"Segment Caches"},"writers":{"type":"integer","title":"Writers"},"pending_writables":{"type":"integer","title":"Pending Writables"},"pending_views":{"items":{"type":"string"},"type":"array","title":"Pending Views"},"views":{"items":{"type":"string"},"type":"array","title":"Views"}},"type":"object","required":["dataset_timestamps","dataset_profiles","segment_caches","writers","pending_writables","pending_views","views"],"title":"LoggerStatusResponse"},"ProcessLoggerStatusResponse":{"properties":{"statuses":{"additionalProperties":{"$ref":"#/components/schemas/LoggerStatusResponse"},"type":"object","title":"Statuses"}},"type":"object","required":["statuses"],"title":"ProcessLoggerStatusResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"ValidationMetadata":{"properties":{"prompt_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Prompt Id"},"validator_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Validator Name"},"failed_metric":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Failed Metric"},"value":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"},{"type":"null"}],"title":"Value"},"timestamp":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Timestamp"},"is_valid":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Valid","default":false}},"type":"object","title":"ValidationMetadata"},"ValidationReport":{"properties":{"failures":{"items":{"$ref":"#/components/schemas/ValidationMetadata"},"type":"array","title":"Failures"}},"type":"object","required":["failures"],"title":"ValidationReport"}}}}